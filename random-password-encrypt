#!/bin/bash
set -euf -o pipefail

##
# Generate a random password then encrypt it.
#
# Usage:
#
#     random-password-encrypt [filepath]
#
# The filepath default is "password",
# which then generates "password.gpg".
#
# Output:
#
#     <filepath>.gpg file with encrypted password.
#
# This uses two SixArm scripts:
#
#   * random-password to generate the password.
#   * gpg-encrypt to encrypt the password file.
#
# You need both of these for this script to work.
#
# Author: Joel Parker Henderson (joel@joelparkerhenderson.com)
# License: GPL
# Updated: 2015-01-25
##

filepath=${1-password}
password=`random-password`

if [[ -e "$filepath" ]]; then
  echo  "The file path $filepath already exists"
  exit -1;
fi

echo "$password" > "$filepath"
gpg-encrypt "$filepath"
rm "$filepath"
echo "$password"
