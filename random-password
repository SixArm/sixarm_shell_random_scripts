#!/bin/sh
set -euf -o pipefail

##
# Generate a random password for high security needs.
#
# Usage:
#
#     random-password [n]
#
# Options:
#
#     * n is an optional length; it defaults to 16.
#
# Example:
#
#     $ random-password
#     crbvqjaptxxapfkv
#
# This uses /dev/urandom to generate random characters.
# This is high security and suitable for cryptography.
#
# This script then filters the characters to pick just the
# ones that match these letters: abcdefghjkmnpqrstuvwxyz.
#
# The filter is for usability: these letters are best for
# communicating to users and also typing on mobile devices.
# We omit the letters "i", "l", "o" because we've learned
# that in some fonts these look like numbers "1" and "0".
#
# Some password-checker tools may report these passwords
# are insecure because they only have lowercase letters.
# This is true *if* you are overriding the defaults by
# using 8 letters or less; hackers have pre-computed all
# short lowercase passwords using "rainbow table" lookups.
#
# We set our default to be 16 letters to protect us from
# rainbow tables. Mathematically, the 16 lowercase letters
# are more computationally secure than 9 mixed characters.
# If you prefer to use more security, use more letters.
#
#
# Author: Joel Parker Henderson (joel@joelparkerhenderson.com)
# License: GPL
# Updated: 2015-01-25
##

random-match abcdefghjkmnpqrstuvwxyz ${1-16}
